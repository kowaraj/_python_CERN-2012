/*jslint evil:true */
/**
 * Dynamic thread loader
 *
 * 
 *  * 
 * 
*/

// 
var DISQUS;
if (!DISQUS || typeof DISQUS == 'function') {
    throw "DISQUS object is not initialized";
}
// 

// json_data and default_json django template variables will close
// and re-open javascript comment tags

(function () {
    var jsonData, cookieMessages, session, key;

    /* */ jsonData = {"reactions": [], "reactions_limit": 10, "ordered_highlighted": [], "posts": {"512883808": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Great writeup would you be willing to have it included in the Cython docs? We can add you as an author :-)\n\nGabriel", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-09-30_03:27:29", "date": "3 years ago", "message": "<p>Great writeup would you be willing to have it included in the Cython docs? We can add you as an author :-)</p>\n\n<p>Gabriel</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "49543f01f2f4a1f8f4a84ff19ea0b9a6", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883809": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "@tom\n\"as long as the python install is 32 bit\":\nehem, that's not the same as supporting 64bit... sorry, in my opinion requiring users to change their environment to accommodate a specific software makes that software unsuitable in a production environment.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-07-29_18:09:51", "date": "2 years ago", "message": "<p>@tom<br>\"as long as the python install is 32 bit\":<br>ehem, that's not the same as supporting 64bit... sorry, in my opinion requiring users to change their environment to accommodate a specific software makes that software unsuitable in a production environment.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "ba9a02140202cfbef5fe75283058b152", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883810": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi , perrygeo. How about your learning of cython? I wanna ask u a question..\nI noticed that the type of value that your c function returns to your .pyx def function is basic type(like int,double,etc.),and  it works well. \nHowever,now my c function returns a pointer p with the type (double *),which points to a list,and the p's memory is allocated by  malloc function. If I want to use the data stored in list p in my .pyx def function ,what should i do? Now I've tried to add the data in  list p into a python list,but it doesn't work and give the following error information:can't convert  to python object.. Anything can i do?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-11-06_02:52:00", "date": "3 years ago", "message": "<p>Hi , perrygeo. How about your learning of cython? I wanna ask u a question..<br>I noticed that the type of value that your c function returns to your .pyx def function is basic type(like int,double,etc.),and  it works well. <br>However,now my c function returns a pointer p with the type (double *),which points to a list,and the p's memory is allocated by  malloc function. If I want to use the data stored in list p in my .pyx def function ,what should i do? Now I've tried to add the data in  list p into a python list,but it doesn't work and give the following error information:can't convert  to python object.. Anything can i do?</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "460a42cff1cacb5eaed6bdbf0bd87346", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883812": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Thanks a lot for this posting. I'm working on a program involving real-time knot simulation and had just re-implemented part of it in Cython.  That produced great results (brought a calculation down from 5 to 0.2), but I was still using Python's sqrt function. Taking your advice, I moved over to C's sqrtf, which brought it down to 0.04!\n\nI have to say I'm glad for Cython's existance. I had rewrite a lot of things (much less elegant.. grr) to make it efficient, but it still beats writing in pure C. Knuth's quote is a good reminder, though. I may go back and make a couple of things clearer again now that I have a bit more of a margin to work with.\n\nBTW, what editor are you using for your Python/Cython coding?\n\nAlso, I noticed your post on parallel programming a while back. Another thing you may want to check out is Clojure, a relatively new language built on the JVM. Two of it's strong points is concurrency and interoperability with Java libraries. The creator gave a talk here recently and I was pretty impressed, though I haven't had a chance to fuss with it myself yet.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-05-25_23:52:10", "date": "4 years ago", "message": "<p>Thanks a lot for this posting. I'm working on a program involving real-time knot simulation and had just re-implemented part of it in Cython.  That produced great results (brought a calculation down from 5 to 0.2), but I was still using Python's sqrt function. Taking your advice, I moved over to C's sqrtf, which brought it down to 0.04!</p>\n\n<p>I have to say I'm glad for Cython's existance. I had rewrite a lot of things (much less elegant.. grr) to make it efficient, but it still beats writing in pure C. Knuth's quote is a good reminder, though. I may go back and make a couple of things clearer again now that I have a bit more of a margin to work with.</p>\n\n<p>BTW, what editor are you using for your Python/Cython coding?</p>\n\n<p>Also, I noticed your post on parallel programming a while back. Another thing you may want to check out is Clojure, a relatively new language built on the JVM. Two of it's strong points is concurrency and interoperability with Java libraries. The creator gave a talk here recently and I was pretty impressed, though I haven't had a chance to fuss with it myself yet.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "8c1f079b8ac4071f89fa3f0e56d6cdd6", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883813": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "@psyco fans\nbut psyco only works on x86, not even x86 64bit.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-07-14_13:17:44", "date": "4 years ago", "message": "<p>@psyco fans<br>but psyco only works on x86, not even x86 64bit.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "8910056e0eab3f768555521d5923a1df", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883814": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "@Shawn\nI use vim for almost everything these days. Thanks for the heads up on Clojure; i'll have to check that out.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-05-25_23:55:43", "date": "4 years ago", "message": "<p>@Shawn<br>I use vim for almost everything these days. Thanks for the heads up on Clojure; i'll have to check that out.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f900c4e7dc008b7604206c803467a661", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883815": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "@ssam\n\nActually, Psyco has been working on intel/mac since 2007 and works just fine on x86_64 as long as the python install is 32 bit.\n\n(Always google before you post.)", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2009-05-24_15:24:53", "date": "3 years ago", "message": "<p>@ssam</p>\n\n<p>Actually, Psyco has been working on intel/mac since 2007 and works just fine on x86_64 as long as the python install is 32 bit.</p>\n\n<p>(Always google before you post.)</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "851e34baec8c61a96a7e5e81c3b1c9d2", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883817": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "http://stackoverflow.com/questions/2581784/can-cython-compile-to-an-exe\nanswered Apr 30 '10 at 9:12 by Aftershock:\n\"\"\"\nhttp://wiki.cython.org/EmbeddingCython\n\nHere it is, assuming you installed python to C:\\Python31 and you want to use Microsoft Compiler. smalltest1.py - is the file you want to compile. test.exe - name of the executable. You need to set the environmental variables for cl.\n\nC:\\Python31\\python.exe C:\\Python31\\Scripts\\cython.py smalltest1.py --embed\n\ncl.exe /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic:\\Python31\\include -Ic:\\Python31\\PC /Tcsmalltest1.c /link /OUT:\"test.exe\" /SUBSYSTEM:CONSOLE /MACHINE:X86 /LIBPATH:c:\\Python31\\libs /LIBPATH:c:\\Python31\\PCbuild\n\"\"\"\n\nI guess gcc is similar to cl.exe.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-07-08_13:14:55", "date": "1 year ago", "message": "<p><a href=\"http://stackoverflow.com/questions/2581784/can-cython-compile-to-an-exe\" rel=\"nofollow\">http://stackoverflow.com/quest...</a><br>answered Apr 30 '10 at 9:12 by Aftershock:<br>\"\"\"<br><a href=\"http://wiki.cython.org/EmbeddingCython\" rel=\"nofollow\">http://wiki.cython.org/Embeddi...</a></p>\n\n<p>Here it is, assuming you installed python to C:\\Python31 and you want to use Microsoft Compiler. <a href=\"http://smalltest1.py\" rel=\"nofollow\">smalltest1.py</a> - is the file you want to compile. test.exe - name of the executable. You need to set the environmental variables for cl.</p>\n\n<p>C:\\Python31\\python.exe C:\\Python31\\Scripts\\<a href=\"http://cython.py\" rel=\"nofollow\">cython.py</a> <a href=\"http://smalltest1.py\" rel=\"nofollow\">smalltest1.py</a> --embed</p>\n\n<p>cl.exe /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic:\\Python31\\include -Ic:\\Python31\\PC /Tcsmalltest1.c /link /OUT:\"test.exe\" /SUBSYSTEM:CONSOLE /MACHINE:X86 /LIBPATH:c:\\Python31\\libs /LIBPATH:c:\\Python31\\PCbuild<br>\"\"\"</p>\n\n<p>I guess gcc is similar to cl.exe.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "2b8d8f903aa0791296f7abddf19688ac", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883821": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Thank you for this example.\n\nI came across this page while looking into the Pypy project.  I have not tried cython, but out of curiousity I tried running this code under pypy-1.8.  The numbers I got seemed comparable.\n\nInitial example, almost verbatim (only change: rename p1.py to greatcircle_p1.py): \n\n$ python2.5 greatcircle.py\nPure python function 1.65540099144 sec\n$ python2.7 greatcircle.py\nPure python function 1.60749793053 sec\n$ ./pypy-c greatcircle.py\nPure python function 0.139759063721 sec  (11.5x faster)\n\nIncrease iterations from 500000 to 5000000:\n\n$ python2.5 greatcircle.py\nPure python function 23.43481493 sec\n$ python2.7 greatcircle.py\nPure python function 15.9338200092 sec\n$ ./pypy-c greatcircle.py\nPure python function 1.22326803207 sec (13x faster)\n\n\nMy machine is a 2.33GHz Intel Core 2 Duo, 3GB 667MHz SDRAM, running OS X 10.5.8, stock python 2.5.1, brew python 2.7.2, and pypy-1.8 (based on Python 2.7, specifically: pypy-pypy-2346207d9946).  I don't have psyco installed to compare that.\n\nI'm not sure what to make of this, I'm new to all of the above.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2012-03-16_06:23:07", "date": "6 months ago", "message": "<p>Thank you for this example.</p>\n\n<p>I came across this page while looking into the Pypy project.  I have not tried cython, but out of curiousity I tried running this code under pypy-1.8.  The numbers I got seemed comparable.</p>\n\n<p>Initial example, almost verbatim (only change: rename <a href=\"http://p1.py\" rel=\"nofollow\">p1.py</a> to <a href=\"http://greatcircle_p1.py\" rel=\"nofollow\">greatcircle_p1.py</a>): </p>\n\n<p>$ python2.5 <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 1.65540099144 sec<br>$ python2.7 <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 1.60749793053 sec<br>$ ./pypy-c <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 0.139759063721 sec  (11.5x faster)</p>\n\n<p>Increase iterations from 500000 to 5000000:</p>\n\n<p>$ python2.5 <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 23.43481493 sec<br>$ python2.7 <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 15.9338200092 sec<br>$ ./pypy-c <a href=\"http://greatcircle.py\" rel=\"nofollow\">greatcircle.py</a><br>Pure python function 1.22326803207 sec (13x faster)</p>\n\n<p>My machine is a 2.33GHz Intel Core 2 Duo, 3GB 667MHz SDRAM, running OS X 10.5.8, stock python 2.5.1, brew python 2.7.2, and pypy-1.8 (based on Python 2.7, specifically: pypy-pypy-2346207d9946).  I don't have psyco installed to compare that.</p>\n\n<p>I'm not sure what to make of this, I'm new to all of the above.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f142bd469edde6f792475f1c4acef006", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883824": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "More on psyco:\n\nnormal version:\nPure python function 3.91737318039 sec\n\nwith psyco:\nPure python function 1.15499091148 sec\n\nwith psyco and changing all math.xxx to xxx\n(from math import acos, cos, sin, pi)\nPure python function 0.049054145813 sec\n\nnot bad, a 100x improvement without writing any code :)", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_21:14:26", "date": "4 years ago", "message": "<p>More on psyco:</p>\n\n<p>normal version:<br>Pure python function 3.91737318039 sec</p>\n\n<p>with psyco:<br>Pure python function 1.15499091148 sec</p>\n\n<p>with psyco and changing all math.xxx to xxx<br>(from math import acos, cos, sin, pi)<br>Pure python function 0.049054145813 sec</p>\n\n<p>not bad, a 100x improvement without writing any code :)</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "b2565c6bab951151e1b54682239b0d99", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883825": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Without psyco:\nbulla@badoo:~/code/python> python p1.py\nPure python function Pure python function 3.09896183014 sec\n2.43880605698 sec\n\nWith psyco:\nbulla@badoo:~/code/python> python p1.py\nPure python function Pure python function 0.152606964111 sec\n1.23215317726 sec", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_12:14:17", "date": "4 years ago", "message": "<p>Without psyco:<br>bulla@badoo:~/code/python&gt; python <a href=\"http://p1.py\" rel=\"nofollow\">p1.py</a><br>Pure python function Pure python function 3.09896183014 sec<br>2.43880605698 sec</p>\n\n<p>With psyco:<br>bulla@badoo:~/code/python&gt; python <a href=\"http://p1.py\" rel=\"nofollow\">p1.py</a><br>Pure python function Pure python function 0.152606964111 sec<br>1.23215317726 sec</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "ae0ef7bc4af35ff0e7653fe41e2a9c72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883826": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Jay,\n\n That would be the case if this is a standalone program. But the whole point was to speed up an existing python codebase one function at a time by writing C extensions. This is one a small part of the overall program and it would be non-trivial to rewrite the entire thing in C from scratch. Which means you need to make a C extension to python - and Cython seems the best way to do that.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_15:31:56", "date": "4 years ago", "message": "<p>Jay,</p>\n\n<p> That would be the case if this is a standalone program. But the whole point was to speed up an existing python codebase one function at a time by writing C extensions. This is one a small part of the overall program and it would be non-trivial to rewrite the entire thing in C from scratch. Which means you need to make a C extension to python - and Cython seems the best way to do that.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f900c4e7dc008b7604206c803467a661", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883827": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Yeah but, if you ask me, by the time you get to your last example you might as well just write c and be done with it. right?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_15:22:08", "date": "4 years ago", "message": "<p>Yeah but, if you ask me, by the time you get to your last example you might as well just write c and be done with it. right?</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "a416fd93af0e4fb28ecf89defb0acd88", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883828": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Thank you Grammar Police. In an effort to learn Cython, I seem to have forgotten English.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-19_23:41:06", "date": "4 years ago", "message": "<p>Thank you Grammar Police. In an effort to learn Cython, I seem to have forgotten English.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 1, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 1, "user_key": "f900c4e7dc008b7604206c803467a661", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883831": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "If you're compiling with the commands you've shown, you're compiling the C code without optimization enabled, which means that the code runs much slower than it ought to. Try adding -O3 to the gcc command lines.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-19_21:37:51", "date": "4 years ago", "message": "<p>If you're compiling with the commands you've shown, you're compiling the C code without optimization enabled, which means that the code runs much slower than it ought to. Try adding -O3 to the gcc command lines.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "58b90620ad1ad673d4f2554861268907", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883832": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Both instance of the word \"it\u2019s\" in this post should be \"its\".  You didn't mean \"it is\".  You meant the possessive pronoun.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-19_22:42:25", "date": "4 years ago", "message": "<p>Both instance of the word \"it\u2019s\" in this post should be \"its\".  You didn't mean \"it is\".  You meant the possessive pronoun.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "8da51612b07abd742ccdbc043f792fc4", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883833": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "You forgot something pretty crucial, the gcc optimization flags; instead of compiling the library with `gcc -c -fPIC -I/usr/include/python2.2/ mymodule.c`, compile it with `gcc -O2 -c -fPIC -I/usr/include/python2.2/ mymodule.c`, and instead of `gcc -lm -o ctest ctest.c` use `gcc -O2 -lm -o ctest ctest.c`. It's quite a noticeable difference on my machine, a speedup of around 6x.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_00:52:15", "date": "4 years ago", "message": "<p>You forgot something pretty crucial, the gcc optimization flags; instead of compiling the library with `gcc -c -fPIC -I/usr/include/python2.2/ mymodule.c`, compile it with `gcc -O2 -c -fPIC -I/usr/include/python2.2/ mymodule.c`, and instead of `gcc -lm -o ctest ctest.c` use `gcc -O2 -lm -o ctest ctest.c`. It's quite a noticeable difference on my machine, a speedup of around 6x.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "3ecb0f3769169c5a8ed092ec2f5b8e23", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883834": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Henrik,  Good point. Psyco would be a decent quick fix. For this example, simply doing an import psyco; psyco.full() increased the speed of the pure python function by 2x to 1.1 seconds. Still not the kind of gain you see with C but it's better than nothing. And it looks like the quick psyco fix would be better than a poorly implemented Cython solution.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-20_00:03:46", "date": "4 years ago", "message": "<p>Henrik,  Good point. Psyco would be a decent quick fix. For this example, simply doing an import psyco; psyco.full() increased the speed of the pure python function by 2x to 1.1 seconds. Still not the kind of gain you see with C but it's better than nothing. And it looks like the quick psyco fix would be better than a poorly implemented Cython solution.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f900c4e7dc008b7604206c803467a661", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883835": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi\n\nGood examples and measurements. Have you tried psyco (http://psyco.sourceforge.net/)?   It is usually significantly faster for repetetive calculations than regular Python, and only requries an import to work (less work than rewriting Python to Cython.)", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2008-04-19_23:31:24", "date": "4 years ago", "message": "<p>Hi</p>\n\n<p>Good examples and measurements. Have you tried psyco (<a href=\"http://psyco.sourceforge.net/)?\" rel=\"nofollow\">http://psyco.sourceforge.net/)...</a>   It is usually significantly faster for repetetive calculations than regular Python, and only requries an import to work (less work than rewriting Python to Cython.)</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "9ffe54dddf39980639aba5fae15c7082", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "512883807": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "I get an error trying to compile the c3.pyx. Both c1.pyx and c2.pyx worked fine, but not c3.pyx.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-04-05_14:01:30", "date": "2 years ago", "message": "<p>I get an error trying to compile the c3.pyx. Both c1.pyx and c2.pyx worked fine, but not c3.pyx.</p>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "5b9ffdc3cae26470b5a3278b3c2ce4aa", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}}, "ordered_posts": [512883828, 512883821, 512883817, 512883809, 512883807, 512883815, 512883810, 512883808, 512883813, 512883814, 512883812, 512883824, 512883826, 512883827, 512883825, 512883833, 512883834, 512883835, 512883832, 512883831], "realtime_enabled": false, "ready": true, "mediaembed": [], "has_more_reactions": false, "realtime_paused": true, "integration": {"receiver_url": null, "hide_user_votes": false, "reply_position": false, "disqus_logo": false}, "highlighted": {}, "reactions_start": 0, "media_url": "http://mediacdn.disqus.com/1348700635", "users": {"5b9ffdc3cae26470b5a3278b3c2ce4aa": {"username": "Alex Liberzon", "tumblr": "", "about": "", "display_name": "Alex Liberzon", "url": "http://disqus.com/guest/5b9ffdc3cae26470b5a3278b3c2ce4aa/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://alexl.wordpress.com/", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/anonusers/2341/2835/avatar32.jpg?1281549414", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "ba9a02140202cfbef5fe75283058b152": {"username": "nick", "tumblr": "", "about": "", "display_name": "nick", "url": "http://disqus.com/guest/ba9a02140202cfbef5fe75283058b152/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "9ffe54dddf39980639aba5fae15c7082": {"username": "Henrik Thostrup Jensen", "tumblr": "", "about": "", "display_name": "Henrik Thostrup Jensen", "url": "http://disqus.com/guest/9ffe54dddf39980639aba5fae15c7082/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "460a42cff1cacb5eaed6bdbf0bd87346": {"username": "navie", "tumblr": "", "about": "", "display_name": "navie", "url": "http://disqus.com/guest/460a42cff1cacb5eaed6bdbf0bd87346/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "f142bd469edde6f792475f1c4acef006": {"username": "Charlie", "tumblr": "", "about": "", "display_name": "Charlie", "url": "http://disqus.com/guest/f142bd469edde6f792475f1c4acef006/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "58b90620ad1ad673d4f2554861268907": {"username": "Rune", "tumblr": "", "about": "", "display_name": "Rune", "url": "http://disqus.com/guest/58b90620ad1ad673d4f2554861268907/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "49543f01f2f4a1f8f4a84ff19ea0b9a6": {"username": "Gabriel", "tumblr": "", "about": "", "display_name": "Gabriel", "url": "http://disqus.com/guest/49543f01f2f4a1f8f4a84ff19ea0b9a6/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "8c1f079b8ac4071f89fa3f0e56d6cdd6": {"username": "Shawn Fumo", "tumblr": "", "about": "", "display_name": "Shawn Fumo", "url": "http://disqus.com/guest/8c1f079b8ac4071f89fa3f0e56d6cdd6/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://www.shawnfumo.com/", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "ae0ef7bc4af35ff0e7653fe41e2a9c72": {"username": "Bullabadoo", "tumblr": "", "about": "", "display_name": "Bullabadoo", "url": "http://disqus.com/guest/ae0ef7bc4af35ff0e7653fe41e2a9c72/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "2b8d8f903aa0791296f7abddf19688ac": {"username": "Cees Timmerman", "tumblr": "", "about": "", "display_name": "Cees Timmerman", "url": "http://disqus.com/guest/2b8d8f903aa0791296f7abddf19688ac/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://www.facebook.com/profile.php?id=1564999382", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "8910056e0eab3f768555521d5923a1df": {"username": "ssam", "tumblr": "", "about": "", "display_name": "ssam", "url": "http://disqus.com/guest/8910056e0eab3f768555521d5923a1df/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "851e34baec8c61a96a7e5e81c3b1c9d2": {"username": "tim", "tumblr": "", "about": "", "display_name": "tim", "url": "http://disqus.com/guest/851e34baec8c61a96a7e5e81c3b1c9d2/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "f900c4e7dc008b7604206c803467a661": {"username": "perrygeo", "tumblr": "", "about": "", "display_name": "perrygeo", "url": "http://disqus.com/guest/f900c4e7dc008b7604206c803467a661/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/anonusers/495/5004/avatar32.jpg?1281549414", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "b2565c6bab951151e1b54682239b0d99": {"username": "Justin", "tumblr": "", "about": "", "display_name": "Justin", "url": "http://disqus.com/guest/b2565c6bab951151e1b54682239b0d99/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://www.bouncybouncy.net/", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "8da51612b07abd742ccdbc043f792fc4": {"username": "Grammar Police", "tumblr": "", "about": "", "display_name": "Grammar Police", "url": "http://disqus.com/guest/8da51612b07abd742ccdbc043f792fc4/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "a416fd93af0e4fb28ecf89defb0acd88": {"username": "Jay Kyburz", "tumblr": "", "about": "", "display_name": "Jay Kyburz", "url": "http://disqus.com/guest/a416fd93af0e4fb28ecf89defb0acd88/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "3ecb0f3769169c5a8ed092ec2f5b8e23": {"username": "Duane", "tumblr": "", "about": "", "display_name": "Duane", "url": "http://disqus.com/guest/3ecb0f3769169c5a8ed092ec2f5b8e23/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": 0, "facebook": "", "avatar": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}}, "user_unapproved": {}, "messagesx": {"count": 0, "unread": []}, "thread": {"voters_count": 0, "offset_posts": 0, "slug": "a_quick_cython_introduction_94", "paginate": false, "num_pages": 1, "days_alive": 0, "moderate_none": false, "voters": {}, "total_posts": 20, "realtime_paused": true, "queued": false, "pagination_type": "append", "user_vote": null, "likes": 3, "num_posts": 20, "closed": false, "per_page": 0, "id": 666948938, "killed": false, "moderate_all": false}, "forum": {"use_media": true, "avatar_size": 32, "apiKey": "wATQvDZg2tMRfFGTPTc2MdvNs5r7Z7oYfm2GsoqL4ToEJw7ZLY4StlLKN4gmJzS9", "features": {}, "comment_max_words": 0, "mobile_theme_disabled": false, "is_early_adopter": false, "login_buttons_enabled": false, "streaming_realtime": false, "reply_position": false, "id": 1400848, "default_avatar_url": "http://mediacdn.disqus.com/1348700635/images/noavatar32.png", "template": {"url": "http://mediacdn.disqus.com/1348700635/uploads/themes/7884a9652e94555c70f96b6be63be216/theme.js?252", "mobile": {"url": "http://mediacdn.disqus.com/1348700635/uploads/themes/mobile/theme.js?254", "css": "http://mediacdn.disqus.com/1348700635/uploads/themes/mobile/theme.css?254"}, "api": "1.1", "name": "Houdini", "css": "http://mediacdn.disqus.com/1348700635/uploads/themes/7884a9652e94555c70f96b6be63be216/theme.css?252"}, "max_depth": 0, "ranks_enabled": false, "lastUpdate": "", "linkbacks_enabled": false, "allow_anon_votes": true, "revert_new_login_flow": false, "stylesUrl": "http://mediacdn.disqus.com/uploads/styles/140/848/perrygeo.css", "show_avatar": true, "reactions_enabled": false, "disqus_auth_disabled": false, "name": "Perrygeo", "language": "en", "mentions_enabled": true, "url": "perrygeo", "allow_anon_post": true, "thread_votes_disabled": false, "hasCustomStyles": false, "moderate_all": false}, "settings": {"realtimeHost": "qq.disqus.com", "uploads_url": "http://media.disqus.com/uploads", "ssl_media_url": "https://securecdn.disqus.com/1348700635", "realtime_url": "http://rt.disqus.com/forums/realtime-cached.js", "facebook_app_id": "52254943976", "minify_js": true, "recaptcha_public_key": "6LdKMrwSAAAAAPPLVhQE9LPRW4LUSZb810_iaa8u", "read_only": false, "facebook_api_key": "52254943976", "juggler_url": "http://juggler.services.disqus.com", "realtimePort": "80", "debug": false, "disqus_url": "http://disqus.com", "media_url": "http://mediacdn.disqus.com/1348700635"}, "ranks": {}, "request": {"sort": "hot", "is_authenticated": false, "user_type": "anon", "subscribe_on_post": 0, "missing_perm": null, "user_id": null, "remote_domain_name": "", "remote_domain": "", "is_verified": false, "profile_url": "", "username": "", "is_global_moderator": false, "sharing": {}, "timestamp": "2012-09-27_09:44:52", "is_moderator": false, "ordered_unapproved_posts": [], "unapproved_posts": {}, "forum": "perrygeo", "is_initial_load": true, "display_username": "", "points": null, "has_email": false, "moderator_can_edit": false, "is_remote": false, "userkey": "", "page": 1}, "context": {"use_twitter_signin": false, "use_fb_connect": false, "show_reply": true, "sigma_chance": 10, "use_google_signin": false, "switches": {"olark_admin_addons": true, "es_index_threads": true, "discovery_best_comment": true, "digests:events:2": true, "digests:events:3": true, "postsort": true, "digests:events:1": true, "firehose": true, "olark_admin_packages": true, "upload_media": true, "website_addons": true, "firehose_gnip_http": true, "textdigger_classification": true, "google_translate": true, "digests:events": true, "next_realtime": true, "firehose_message_db_lookup": true, "digests": true, "juggler_thread_onReady": true, "website_homepage_https_off": true, "juggler_enabled": true, "discovery_network": true, "promoted_discovery_budget": true, "use_impermium": true, "digests:render": true, "notifications": true, "shardpost:index": true, "usertransformer_reputation": true, "fingerprint": true, "send_to_impermium": true, "firehose_push": true, "shardpost": true, "train_impermium": true, "limit_get_posts_days_30d": true, "website_base_template": true, "firehose_pubsub_throttle": true, "new_moderate": true, "redis_threadcount": true, "html_email": true, "listactivity_replies": true, "postsort:index": true, "phoenix_reputation": true, "next_thread_sharing": true, "use_master_for_api": true, "next_realtime_indicators": true, "community_icon": true, "discovery_jones": true, "originalauthor_switchover": true, "static_styles": true, "stats": true, "realtime": true, "redis_notification_tokens": true, "discovery_next": true, "show_captcha_on_links": true, "olark_support": true, "firehose_gnip": true, "firehose_pubsub": true, "olark_addons": true, "phoenix_optout": true, "edits_to_spam": true, "promoted_discovery_random": true, "discovery_community": true, "phoenix": true, "discovery_redirect_event": true, "use_rs_paginator_5m": true, "theme_editor_disabled": true, "textdigger_crawler": true, "listactivity_replies_30d": true, "next_discard_low_rep": true, "google_analytics": true, "mentions": true, "olark_install": true}, "forum_facebook_key": "", "use_yahoo": false, "subscribed": false, "active_gargoyle_switches": ["community_icon", "digests", "digests:events", "digests:events:1", "digests:events:2", "digests:events:3", "digests:render", "discovery_best_comment", "discovery_community", "discovery_jones", "discovery_network", "discovery_next", "discovery_redirect_event", "edits_to_spam", "es_index_threads", "fingerprint", "firehose", "firehose_gnip", "firehose_gnip_http", "firehose_message_db_lookup", "firehose_pubsub", "firehose_pubsub_throttle", "firehose_push", "google_analytics", "google_translate", "html_email", "juggler_enabled", "juggler_thread_onReady", "limit_get_posts_days_30d", "listactivity_replies", "listactivity_replies_30d", "mentions", "new_moderate", "next_discard_low_rep", "next_realtime", "next_realtime_indicators", "next_thread_sharing", "notifications", "olark_addons", "olark_admin_addons", "olark_admin_packages", "olark_install", "olark_support", "originalauthor_switchover", "phoenix", "phoenix_optout", "phoenix_reputation", "postsort", "postsort:index", "promoted_discovery_budget", "promoted_discovery_random", "realtime", "redis_notification_tokens", "redis_threadcount", "send_to_impermium", "shardpost", "shardpost:index", "show_captcha_on_links", "static_styles", "stats", "textdigger_classification", "textdigger_crawler", "theme_editor_disabled", "train_impermium", "use_impermium", "use_master_for_api", "use_rs_paginator_5m", "usertransformer_reputation", "website_addons", "website_base_template", "website_homepage_https_off"], "realtime_speed": 15000, "use_openid": false}}; /* */
    /* __extrajson__ */
    cookieMessages = {"user_created": null, "post_has_profile": null, "post_twitter": null, "post_not_approved": null}; session = {"url": null, "name": null, "email": null};

    DISQUS.jsonData = jsonData;
    DISQUS.jsonData.cookie_messages = cookieMessages;
    DISQUS.jsonData.session = session;

    if (DISQUS.useSSL) {
        DISQUS.useSSL(DISQUS.jsonData.settings);
    }

    // The mappings below are for backwards compatibility--before we port all the code that
    // accesses jsonData.settings to DISQUS.settings

    var mappings = {
        debug:                'disqus.debug',
        minify_js:            'disqus.minified',
        read_only:            'disqus.readonly',
        recaptcha_public_key: 'disqus.recaptcha.key',
        facebook_app_id:      'disqus.facebook.appId',
        facebook_api_key:     'disqus.facebook.apiKey'
    };

    var urlMappings = {
        disqus_url:    'disqus.urls.main',
        media_url:     'disqus.urls.media',
        ssl_media_url: 'disqus.urls.sslMedia',
        realtime_url:  'disqus.urls.realtime',
        uploads_url:   'disqus.urls.uploads'
    };

    if (DISQUS.jsonData.context.switches.realtime_setting_change) {
        urlMappings.realtimeHost = 'realtime.host';
        urlMappings.realtimePort = 'realtime.port';
    }
    for (key in mappings) {
        if (mappings.hasOwnProperty(key)) {
            DISQUS.settings.set(mappings[key], DISQUS.jsonData.settings[key]);
        }
    }

    for (key in urlMappings) {
        if (urlMappings.hasOwnProperty(key)) {
            DISQUS.jsonData.settings[key] = DISQUS.settings.get(urlMappings[key]);
        }
    }
}());

DISQUS.jsonData.context.csrf_token = '21bc467119200cb06806902fa8e2f5b0';

DISQUS.jsonData.urls = {
    login: 'http://disqus.com/profile/login/',
    logout: 'http://disqus.com/logout/',
    upload_remove: 'http://perrygeo.disqus.com/thread/a_quick_cython_introduction_94/async_media_remove/',
    request_user_profile: 'http://disqus.com/AnonymousUser/',
    request_user_avatar: 'http://mediacdn.disqus.com/1348700635/images/noavatar92.png',
    verify_email: 'http://disqus.com/verify/',
    remote_settings: 'http://perrygeo.disqus.com/_auth/embed/remote_settings/',
    edit_profile_window: 'http://disqus.com/embed/profile/edit/',
    embed_thread: 'http://perrygeo.disqus.com/thread.js',
    embed_vote: 'http://perrygeo.disqus.com/vote.js',
    embed_thread_vote: 'http://perrygeo.disqus.com/thread_vote.js',
    embed_thread_share: 'http://perrygeo.disqus.com/thread_share.js',
    embed_queueurl: 'http://perrygeo.disqus.com/queueurl.js',
    embed_hidereaction: 'http://perrygeo.disqus.com/hidereaction.js',
    embed_more_reactions: 'http://perrygeo.disqus.com/more_reactions.js',
    embed_subscribe: 'http://perrygeo.disqus.com/subscribe.js',
    embed_highlight: 'http://perrygeo.disqus.com/highlight.js',
    embed_block: 'http://perrygeo.disqus.com/block.js',
    update_moderate_all: 'http://perrygeo.disqus.com/update_moderate_all.js',
    update_days_alive: 'http://perrygeo.disqus.com/update_days_alive.js',
    show_user_votes: 'http://perrygeo.disqus.com/show_user_votes.js',
    forum_view: 'http://perrygeo.disqus.com/a_quick_cython_introduction_94',
    cnn_saml_try: 'http://disqus.com/saml/cnn/try/',
    realtime: DISQUS.jsonData.settings.realtime_url,
    thread_view: 'http://perrygeo.disqus.com/thread/a_quick_cython_introduction_94/',
    twitter_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/twitter/begin/',
    yahoo_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/yahoo/begin/',
    openid_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/openid/begin/',
    googleConnect: DISQUS.jsonData.settings.disqus_url + '/_ax/google/begin/',
    community: 'http://perrygeo.disqus.com/community.html',
    admin: 'http://perrygeo.disqus.com/admin/moderate/',
    moderate: 'http://perrygeo.disqus.com/admin/moderate/',
    moderate_threads: 'http://perrygeo.disqus.com/admin/moderate-threads/',
    settings: 'http://perrygeo.disqus.com/admin/settings/',
    unmerged_profiles: 'http://disqus.com/embed/profile/unmerged_profiles/',
    juggler: DISQUS.jsonData.settings.juggler_url,

    channels: {
        def:      'http://disqus.com/default.html', /* default channel */
        auth:     'https://disqus.com/embed/login.html',
        tweetbox: 'http://disqus.com/forums/integrations/twitter/tweetbox.html?f=perrygeo',
        edit:     'http://perrygeo.disqus.com/embed/editcomment.html'
    }
};


// 
//     
DISQUS.jsonData.urls.channels.reply = 'http://mediacdn.disqus.com/1348700635/build/system/reply.html';
DISQUS.jsonData.urls.channels.upload = 'http://mediacdn.disqus.com/1348700635/build/system/upload.html';
DISQUS.jsonData.urls.channels.sso = 'http://mediacdn.disqus.com/1348700635/build/system/sso.html';
DISQUS.jsonData.urls.channels.facebook = 'http://mediacdn.disqus.com/1348700635/build/system/facebook.html';
//     
// 
