import sys
from Vector import Vector2D

class Particle(object):

    def __init__(self, r,  x,y, vx, vy):
        self.r = r
        self.pos = Vector2D( x, y)
        self.vel = Vector2D(vx,vy)

    def move(self, dt, bounds):
        
        x_min, x_max, y_min, y_max = bounds

        self.pos += self.vel * dt

        if self.pos.x + self.r > x_max:
            self.pos.x = x_max - self.r
            self.vel.x = -self.vel.x

        if self.pos.x - self.r < x_min:
            self.pos.x = x_min + self.r
            self.vel.x = -self.vel.x

        if self.pos.y + self.r > y_max:
            self.pos.y = y_max - self.r
            self.vel.y = -self.vel.y

        if self.pos.y - self.r < y_min:
            self.pos.y = y_min + self.r
            self.vel.y = -self.vel.y

class Universe(object):

    def __init__(self, width, height, DisplayType):
        self.particles = [Particle(10, width/2, height/2, 100,  50),
                          Particle(20, width/4, height/2,  50, 100),
                          Particle(30, width/2, height/4,  75,  90),
                          Particle(25, width/2, height/2,  20, 110),
                          Particle(15, width/2, height/2, 140,   5),
                          ]
        self.display = DisplayType(width, height, self)

    def evolve(self, dt, bounds):
        for particle in self.particles:
            particle.move(dt, bounds)

    def draw(self, display):
        for p in self.particles:
            display.draw_circle(p.r, *p.pos)

if len(sys.argv) == 1:
    from TkinterDisplay import TkinterDisplay as Display
else:
    if sys.argv[1] == 'pyg':
        from PygletDisplay import PygletDisplay as Display
    if sys.argv[1] == 'tk':
        from TkinterDisplay import TkinterDisplay as Display


Universe(600, 400, Display)

